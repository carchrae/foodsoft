
%td{:colspan => "7"}
  %table.table.table-striped
    %thead
      %tr
        %td
        %td{:style => "width:8em"}= Ordergroup.model_name.human
        -#%td.center= t('.units')
        %td.center
          %acronym{:title => t('shared.articles.received_desc')}= t 'shared.articles.received'
        %td= "(in units)"
        %td= t('.total')
        %td{:colspan => "3",:style => "width:14em"}
          - unless order_article.order.closed?
            = link_to t('.add_group'), new_group_order_article_path(order_article_id: order_article.id),
              remote: true, class: 'btn btn-mini' 
    %tbody
      - totals = {result: 0}
      - group_order_articles = order_article.group_order_articles.select { |goa| goa.result > 0 }
      - for group_order_article in group_order_articles.sort_by { | goa | goa.group_order.ordergroup_name  }
        %tr[group_order_article]
          %td
          %td{:style=>"width:50%"}
            = group_order_article.group_order.ordergroup_name
          %td.center= group_order_article_edit_result(group_order_article)
          %td.center= group_order_article_show_amount(group_order_article) #if closed
          %td.numeric= number_to_currency(group_order_article.order_article.price.price * group_order_article.result)
          %td.actions{:style=>"width:1em"}
          %td
        - totals[:result] += group_order_article.result
    %tfoot
      - member_total = order_article.group_orders_sum
      - total_unit_quantity_ordered = order_article.article_price.unit_quantity * order_article.units
      - units_received = (member_total[:quantity]/order_article.article_price.unit_quantity).round(5)
      - rounding_error = order_article.calculate_rounding_error(order_article.total_supplier_charge,member_total[:quantity])*member_total[:quantity]
      - actual_price_per = order_article.price.price_rounded_up(price: order_article.total_supplier_charge, quantity: member_total[:quantity])
      - price_balanced = actual_price_per.to_s == order_article.price.price.to_s
      - price_style = "color:red;font-weight: bold" unless price_balanced
      - price_style = "color:green" if price_balanced
      %tr
        %td
        %td{:style => "width:8em"}= t('.total_fc')
        %td.center{style: price_style}
          = units_received
          = pkg_helper order_article.article_price
          = " = #{totals[:result]}" unless order_article.article_price.unit_quantity = 1
        %td.center= group_order_article_total_amount(totals[:result], order_article)
        %td.numeric= number_to_currency(member_total[:net_price]-rounding_error)
        - if rounding_error >= 0.0001
          %td{:colspan => "3"}
            %abbr{title: "plus this amount from rounding-up to cent"}
              = "(+ #{number_to_currency(rounding_error)})"
      %tr
        %td
        %td{:style => "width:8em"}= t('.total_supplier')
        %td.center
          = order_article.units
          = pkg_helper order_article.article_price
          = " = #{total_unit_quantity_ordered}" unless order_article.article_price.unit_quantity = 1
        %td.center= group_order_article_total_amount((total_unit_quantity_ordered), order_article)
        %td.numeric= number_to_currency(order_article.total_supplier_charge)
      - unless price_balanced
        %tr
          %td.center{:colspan => "6", :style => price_style}
            .span.info
              .p
                = "if the supplier sent a refund/adjustment then change received amount to #{units_received} otherwise"
                = "adjust the price to #{number_to_currency(actual_price_per)} to match supplier charges"
